node_positions[group_nodes[i], 2] <- y_center + r * sin(theta)
}
}
node_positions[10,2] <- node_positions[10,2] - 30
node_positions[11,2] <- node_positions[11,2] + 30
node_positions[3,2] <- node_positions[3,2] + 30
node_positions[7,1] <- node_positions[7,1] + 180
pdf("/Users/dahunseo/programming/R/igraph/graph_output_Palbociclib_EMT_CNA_EIF4EBP1_mRNA_CTNNB1.pdf", width = 20, height = 11)
igraph::plot.igraph(g,
edge.width = 3,  # 엣지의 기본 두께
# vertex.shape = "ellipse",
vertex.size = 15,
vertex.label.cex = 1.5,  # 노드 라벨 크기
vertex.label.color = "black",
edge.arrow.size = E(g)$arrow.size,  # 방향성 엣지에 화살표 추가
edge.arrow.mode = E(g)$arrow.mode,
edge.color = E(g)$color,  # weight 값에 따른 alpha 적용된 색상
layout = node_positions,
asp = 0
)
dev.off()
# -*- coding: utf-8 -*-
rm(list = ls())
suppressPackageStartupMessages({
library(dplyr)
})
edges_data <- read.table("/Users/dahunseo/programming/R/igraph/all_whole_edgeattrSingleDrug_pp10.txt")
colnames(edges_data) <- c("from", "to", "type", "weight")
edges_data <-
edges_data %>%
dplyr::filter(to != "Drug_Fulvestrant") %>%
dplyr::filter(to != "Drug_Tamoxifen") %>%
dplyr::filter(!(grepl("^CNA_", from) & from != "CNA_EIF4EBP1")) %>%
dplyr::filter(!grepl("^CNA_", to))
# 노드 이름에서 카테고리 추출 (CNA, mRNA, RPPA, Drug)
node_categories <- sapply(unique(c(edges_data$from, edges_data$to)), function(node) {
if (grepl("^CNA_", node)) return("CNA")
if (grepl("^mRNA_", node)) return("mRNA")
if (grepl("^RPPA_", node)) return("RPPA")
if (grepl("^Drug_", node)) return("Drug")
})
# 노드의 색상 설정
node_colors <- sapply(node_categories, function(category) {
if (category == "CNA") return(rgb(red=255,green=153,blue=102,maxColorValue=255))
if (category == "mRNA") return(rgb(red=102,green=153,blue=255,maxColorValue=255))
if (category == "RPPA") return(rgb(red=102,green=204,blue=0,maxColorValue=255))
if (category == "Drug") return(rgb(red=204,green=204,blue=204,maxColorValue=255))
})
# 그래프 생성
g <- graph_from_data_frame(edges_data, directed = TRUE)
# 노드 속성 추가 (색상 및 이름 라벨)
V(g)$color <- node_colors[V(g)$name]
V(g)$label <- sub("^(CNA_|mRNA_|RPPA_|Drug_)", "", V(g)$name)
# 엣지 선명도 추가
E(g)$weight <- edges_data$weight^2
# 엣지 타입에 따라 선 스타일 설정
E(g)$lty <- 1
# 방향이 있는 엣지에 화살표 크기 설정
E(g)$arrow.size <- ifelse(edges_data$type == "dir", 0.9, 1.8)
# 화살표 모드 설정 (단방향 또는 양방향)
E(g)$arrow.mode <- ifelse(edges_data$type == "dir", 2, 0)  # dir 엣지는 화살표 있음, und는 없음
# 엣지 색상에 weight 기반으로 alpha 값 반영 (0에서 1까지, 0은 완전히 투명)
# 투명도 값을 weight에 따라 설정. weight 값이 작을수록 투명하게 설정
E(g)$color <- apply(as.matrix(E(g)$weight), 1, function(w) {
rgb(0.5, 0.5, 0.5, alpha = w / max(E(g)$weight))  # gray 색에 alpha 반영
})
set.seed(123)  # 재현성을 위해 난수 고정
# 노드 카테고리별로 그룹화하고 좌표 수동 지정
node_positions <- matrix(NA, nrow = length(V(g)), ncol = 2)
# 큰 원의 중심 좌표 및 반경 설정 (카테고리별)
R <- 2  # 각 색상 그룹별 큰 원의 반경
x_centers <- c(CNA = -1200, mRNA = -100, RPPA = 800, Drug = 1300)  # 색상 그룹별 X축 중심
y_center <- 0  # 모든 그룹은 Y축 중심을 공유
# 각 카테고리별로 노드를 원형으로 배치
for (category in names(x_centers)) {
group_nodes <- which(node_categories == category)  # 해당 카테고리의 노드들
num_nodes <- length(group_nodes)
theta_step <- 2 * pi / num_nodes  # 각도 간격
for (i in seq_along(group_nodes)) {
r <- sqrt(runif(1, 15000, 15000.5)) * R  # 각 색상 그룹의 큰 원 안에 무작위 배치 (더 넓은 반경 사용)
theta <- theta_step * i  # 각도를 일정하게 설정
# 폴라 좌표에서 X, Y 좌표로 변환 (각 그룹별 중심에서)
node_positions[group_nodes[i], 1] <- x_centers[category] + r * cos(theta)
node_positions[group_nodes[i], 2] <- y_center + r * sin(theta)
}
}
node_positions[10,2] <- node_positions[10,2] - 30
node_positions[11,2] <- node_positions[11,2] + 30
node_positions[3,2] <- node_positions[3,2] + 30
node_positions[7,1] <- node_positions[7,1] + 180
pdf("/Users/dahunseo/programming/R/igraph/graph_output_Palbociclib_EMT_CNA_EIF4EBP1_mRNA_CTNNB1.pdf", width = 20, height = 11)
igraph::plot.igraph(g,
edge.width = 3,  # 엣지의 기본 두께
# vertex.shape = "ellipse",
vertex.size = 15,
vertex.label.cex = 1.6,  # 노드 라벨 크기
vertex.label.color = "black",
edge.arrow.size = E(g)$arrow.size,  # 방향성 엣지에 화살표 추가
edge.arrow.mode = E(g)$arrow.mode,
edge.color = E(g)$color,  # weight 값에 따른 alpha 적용된 색상
layout = node_positions,
asp = 0
)
dev.off()
# -*- coding: utf-8 -*-
rm(list = ls())
suppressPackageStartupMessages({
library(dplyr)
})
edges_data <- read.table("/Users/dahunseo/programming/R/igraph/all_whole_edgeattrSingleDrug_pp10.txt")
colnames(edges_data) <- c("from", "to", "type", "weight")
edges_data <-
edges_data %>%
dplyr::filter(to != "Drug_Fulvestrant") %>%
dplyr::filter(to != "Drug_Tamoxifen") %>%
dplyr::filter(!(grepl("^CNA_", from) & from != "CNA_EIF4EBP1")) %>%
dplyr::filter(!grepl("^CNA_", to))
# 노드 이름에서 카테고리 추출 (CNA, mRNA, RPPA, Drug)
node_categories <- sapply(unique(c(edges_data$from, edges_data$to)), function(node) {
if (grepl("^CNA_", node)) return("CNA")
if (grepl("^mRNA_", node)) return("mRNA")
if (grepl("^RPPA_", node)) return("RPPA")
if (grepl("^Drug_", node)) return("Drug")
})
# 노드의 색상 설정
node_colors <- sapply(node_categories, function(category) {
if (category == "CNA") return(rgb(red=255,green=153,blue=102,maxColorValue=255))
if (category == "mRNA") return(rgb(red=102,green=153,blue=255,maxColorValue=255))
if (category == "RPPA") return(rgb(red=102,green=204,blue=0,maxColorValue=255))
if (category == "Drug") return(rgb(red=204,green=204,blue=204,maxColorValue=255))
})
# 그래프 생성
g <- graph_from_data_frame(edges_data, directed = TRUE)
# 노드 속성 추가 (색상 및 이름 라벨)
V(g)$color <- node_colors[V(g)$name]
V(g)$label <- sub("^(CNA_|mRNA_|RPPA_|Drug_)", "", V(g)$name)
# 엣지 선명도 추가
E(g)$weight <- edges_data$weight^2
# 엣지 타입에 따라 선 스타일 설정
E(g)$lty <- 1
# 방향이 있는 엣지에 화살표 크기 설정
E(g)$arrow.size <- ifelse(edges_data$type == "dir", 0.9, 1.8)
# 화살표 모드 설정 (단방향 또는 양방향)
E(g)$arrow.mode <- ifelse(edges_data$type == "dir", 2, 0)  # dir 엣지는 화살표 있음, und는 없음
# 엣지 색상에 weight 기반으로 alpha 값 반영 (0에서 1까지, 0은 완전히 투명)
# 투명도 값을 weight에 따라 설정. weight 값이 작을수록 투명하게 설정
E(g)$color <- apply(as.matrix(E(g)$weight), 1, function(w) {
rgb(0.5, 0.5, 0.5, alpha = w / max(E(g)$weight))  # gray 색에 alpha 반영
})
set.seed(123)  # 재현성을 위해 난수 고정
# 노드 카테고리별로 그룹화하고 좌표 수동 지정
node_positions <- matrix(NA, nrow = length(V(g)), ncol = 2)
# 큰 원의 중심 좌표 및 반경 설정 (카테고리별)
R <- 2  # 각 색상 그룹별 큰 원의 반경
x_centers <- c(CNA = -1200, mRNA = -100, RPPA = 800, Drug = 1300)  # 색상 그룹별 X축 중심
y_center <- 0  # 모든 그룹은 Y축 중심을 공유
# 각 카테고리별로 노드를 원형으로 배치
for (category in names(x_centers)) {
group_nodes <- which(node_categories == category)  # 해당 카테고리의 노드들
num_nodes <- length(group_nodes)
theta_step <- 2 * pi / num_nodes  # 각도 간격
for (i in seq_along(group_nodes)) {
r <- sqrt(runif(1, 15000, 15000.5)) * R  # 각 색상 그룹의 큰 원 안에 무작위 배치 (더 넓은 반경 사용)
theta <- theta_step * i  # 각도를 일정하게 설정
# 폴라 좌표에서 X, Y 좌표로 변환 (각 그룹별 중심에서)
node_positions[group_nodes[i], 1] <- x_centers[category] + r * cos(theta)
node_positions[group_nodes[i], 2] <- y_center + r * sin(theta)
}
}
node_positions[10,2] <- node_positions[10,2] - 30
node_positions[11,2] <- node_positions[11,2] + 30
node_positions[3,2] <- node_positions[3,2] + 30
node_positions[7,1] <- node_positions[7,1] + 180
pdf("/Users/dahunseo/programming/R/igraph/graph_output_Palbociclib_EMT_CNA_EIF4EBP1_mRNA_CTNNB1.pdf", width = 20, height = 11)
igraph::plot.igraph(g,
edge.width = 3,  # 엣지의 기본 두께
# vertex.shape = "ellipse",
vertex.size = 15,
vertex.label.cex = 1.7,  # 노드 라벨 크기
vertex.label.color = "black",
edge.arrow.size = E(g)$arrow.size,  # 방향성 엣지에 화살표 추가
edge.arrow.mode = E(g)$arrow.mode,
edge.color = E(g)$color,  # weight 값에 따른 alpha 적용된 색상
layout = node_positions,
asp = 0
)
dev.off()
# -*- coding: utf-8 -*-
rm(list = ls())
suppressPackageStartupMessages({
library(dplyr)
})
edges_data <- read.table("/Users/dahunseo/programming/R/igraph/all_whole_edgeattrSingleDrug_pp10.txt")
colnames(edges_data) <- c("from", "to", "type", "weight")
edges_data <-
edges_data %>%
dplyr::filter(to != "Drug_Fulvestrant") %>%
dplyr::filter(to != "Drug_Tamoxifen") %>%
dplyr::filter(!(grepl("^CNA_", from) & from != "CNA_EIF4EBP1")) %>%
dplyr::filter(!grepl("^CNA_", to))
# 노드 이름에서 카테고리 추출 (CNA, mRNA, RPPA, Drug)
node_categories <- sapply(unique(c(edges_data$from, edges_data$to)), function(node) {
if (grepl("^CNA_", node)) return("CNA")
if (grepl("^mRNA_", node)) return("mRNA")
if (grepl("^RPPA_", node)) return("RPPA")
if (grepl("^Drug_", node)) return("Drug")
})
# 노드의 색상 설정
node_colors <- sapply(node_categories, function(category) {
if (category == "CNA") return(rgb(red=255,green=153,blue=102,maxColorValue=255))
if (category == "mRNA") return(rgb(red=102,green=153,blue=255,maxColorValue=255))
if (category == "RPPA") return(rgb(red=102,green=204,blue=0,maxColorValue=255))
if (category == "Drug") return(rgb(red=204,green=204,blue=204,maxColorValue=255))
})
# 그래프 생성
g <- graph_from_data_frame(edges_data, directed = TRUE)
# 노드 속성 추가 (색상 및 이름 라벨)
V(g)$color <- node_colors[V(g)$name]
V(g)$label <- sub("^(CNA_|mRNA_|RPPA_|Drug_)", "", V(g)$name)
# 엣지 선명도 추가
E(g)$weight <- edges_data$weight^2
# 엣지 타입에 따라 선 스타일 설정
E(g)$lty <- 1
# 방향이 있는 엣지에 화살표 크기 설정
E(g)$arrow.size <- ifelse(edges_data$type == "dir", 0.9, 1.8)
# 화살표 모드 설정 (단방향 또는 양방향)
E(g)$arrow.mode <- ifelse(edges_data$type == "dir", 2, 0)  # dir 엣지는 화살표 있음, und는 없음
# 엣지 색상에 weight 기반으로 alpha 값 반영 (0에서 1까지, 0은 완전히 투명)
# 투명도 값을 weight에 따라 설정. weight 값이 작을수록 투명하게 설정
E(g)$color <- apply(as.matrix(E(g)$weight), 1, function(w) {
rgb(0.5, 0.5, 0.5, alpha = w / max(E(g)$weight))  # gray 색에 alpha 반영
})
set.seed(123)  # 재현성을 위해 난수 고정
# 노드 카테고리별로 그룹화하고 좌표 수동 지정
node_positions <- matrix(NA, nrow = length(V(g)), ncol = 2)
# 큰 원의 중심 좌표 및 반경 설정 (카테고리별)
R <- 2  # 각 색상 그룹별 큰 원의 반경
x_centers <- c(CNA = -1200, mRNA = -100, RPPA = 800, Drug = 1300)  # 색상 그룹별 X축 중심
y_center <- 0  # 모든 그룹은 Y축 중심을 공유
# 각 카테고리별로 노드를 원형으로 배치
for (category in names(x_centers)) {
group_nodes <- which(node_categories == category)  # 해당 카테고리의 노드들
num_nodes <- length(group_nodes)
theta_step <- 2 * pi / num_nodes  # 각도 간격
for (i in seq_along(group_nodes)) {
r <- sqrt(runif(1, 15000, 15000.5)) * R  # 각 색상 그룹의 큰 원 안에 무작위 배치 (더 넓은 반경 사용)
theta <- theta_step * i  # 각도를 일정하게 설정
# 폴라 좌표에서 X, Y 좌표로 변환 (각 그룹별 중심에서)
node_positions[group_nodes[i], 1] <- x_centers[category] + r * cos(theta)
node_positions[group_nodes[i], 2] <- y_center + r * sin(theta)
}
}
node_positions[10,2] <- node_positions[10,2] - 30
node_positions[11,2] <- node_positions[11,2] + 30
node_positions[3,2] <- node_positions[3,2] + 30
node_positions[7,1] <- node_positions[7,1] + 180
pdf("/Users/dahunseo/programming/R/igraph/graph_output_Palbociclib_EMT_CNA_EIF4EBP1_mRNA_CTNNB1.pdf", width = 20, height = 11)
igraph::plot.igraph(g,
edge.width = 3,  # 엣지의 기본 두께
# vertex.shape = "ellipse",
vertex.size = 15,
vertex.label.cex = 1.6,  # 노드 라벨 크기
vertex.label.color = "black",
edge.arrow.size = E(g)$arrow.size,  # 방향성 엣지에 화살표 추가
edge.arrow.mode = E(g)$arrow.mode,
edge.color = E(g)$color,  # weight 값에 따른 alpha 적용된 색상
layout = node_positions,
asp = 0
)
dev.off()
# -*- coding: utf-8 -*-
rm(list = ls())
suppressPackageStartupMessages({
library(dplyr)
})
edges_data <- read.table("/Users/dahunseo/programming/R/igraph/all_whole_edgeattrSingleDrug_pp12.txt")
colnames(edges_data) <- c("from", "to", "type", "weight")
edges_data <-
edges_data %>%
dplyr::filter(to != "Drug_Palbociclib") %>%
dplyr::filter(to != "Drug_Tamoxifen") %>%
dplyr::filter(!(grepl("^CNA_", from) & from != "CNA_RBM15")) %>%
dplyr::filter(!grepl("^CNA_", to))
# 노드 이름에서 카테고리 추출 (CNA, mRNA, RPPA, Drug)
node_categories <- sapply(unique(c(edges_data$from, edges_data$to)), function(node) {
if (grepl("^CNA_", node)) return("CNA")
if (grepl("^mRNA_", node)) return("mRNA")
if (grepl("^RPPA_", node)) return("RPPA")
if (grepl("^Drug_", node)) return("Drug")
})
# 노드의 색상 설정
node_colors <- sapply(node_categories, function(category) {
if (category == "CNA") return(rgb(red=255,green=153,blue=102,maxColorValue=255))
if (category == "mRNA") return(rgb(red=102,green=153,blue=255,maxColorValue=255))
if (category == "RPPA") return(rgb(red=102,green=204,blue=0,maxColorValue=255))
if (category == "Drug") return(rgb(red=204,green=204,blue=204,maxColorValue=255))
})
# 그래프 생성
g <- graph_from_data_frame(edges_data, directed = TRUE)
# 노드 속성 추가 (색상 및 이름 라벨)
V(g)$color <- node_colors[V(g)$name]
V(g)$label <- sub("^(CNA_|mRNA_|RPPA_|Drug_)", "", V(g)$name)
# 엣지 선명도 추가
E(g)$weight <- edges_data$weight^2
# 엣지 타입에 따라 선 스타일 설정
E(g)$lty <- 1
# 방향이 있는 엣지에 화살표 크기 설정
E(g)$arrow.size <- ifelse(edges_data$type == "dir", 0.9, 1.8)
# 화살표 모드 설정 (단방향 또는 양방향)
E(g)$arrow.mode <- ifelse(edges_data$type == "dir", 2, 0)  # dir 엣지는 화살표 있음, und는 없음
# 엣지 색상에 weight 기반으로 alpha 값 반영 (0에서 1까지, 0은 완전히 투명)
# 투명도 값을 weight에 따라 설정. weight 값이 작을수록 투명하게 설정
E(g)$color <- apply(as.matrix(E(g)$weight), 1, function(w) {
rgb(0.5, 0.5, 0.5, alpha = w / max(E(g)$weight))  # gray 색에 alpha 반영
})
set.seed(123)  # 재현성을 위해 난수 고정
# 노드 카테고리별로 그룹화하고 좌표 수동 지정
node_positions <- matrix(NA, nrow = length(V(g)), ncol = 2)
# 큰 원의 중심 좌표 및 반경 설정 (카테고리별)
R <- 2  # 각 색상 그룹별 큰 원의 반경
x_centers <- c(CNA = -1200, mRNA = -100, RPPA = 800, Drug = 1300)  # 색상 그룹별 X축 중심
y_center <- 0  # 모든 그룹은 Y축 중심을 공유
# 각 카테고리별로 노드를 원형으로 배치
for (category in names(x_centers)) {
group_nodes <- which(node_categories == category)  # 해당 카테고리의 노드들
num_nodes <- length(group_nodes)
theta_step <- 2 * pi / num_nodes  # 각도 간격
for (i in seq_along(group_nodes)) {
r <- sqrt(runif(1, 15000, 15000.5)) * R  # 각 색상 그룹의 큰 원 안에 무작위 배치 (더 넓은 반경 사용)
theta <- theta_step * i  # 각도를 일정하게 설정
# 폴라 좌표에서 X, Y 좌표로 변환 (각 그룹별 중심에서)
node_positions[group_nodes[i], 1] <- x_centers[category] + r * cos(theta)
node_positions[group_nodes[i], 2] <- y_center + r * sin(theta)
}
}
node_positions[7,2] <- node_positions[7,2] + 40
node_positions[7,1] <- node_positions[7,1] - 50
node_positions[8,2] <- node_positions[8,2] + 70
node_positions[5,2] <- node_positions[5,2] - 80
node_positions[6,2] <- node_positions[6,2] - 80
node_positions[2,2] <- node_positions[2,2] - 80
node_positions[3,2] <- node_positions[3,2] + 80
node_positions[1,2] <- node_positions[1,2] - 80
node_positions[4,2] <- node_positions[4,2] + 40
node_positions[4,1] <- node_positions[4,1] + 30
pdf("/Users/dahunseo/programming/R/igraph/graph_output_Fulvestrant_Core_reactive_CNA_RBM15_mRNA_CTNNB1.pdf", width = 20, height = 11)
igraph::plot.igraph(g,
edge.width = 3,  # 엣지의 기본 두께
# vertex.shape = "ellipse",
vertex.size = 15,
vertex.label.cex = 1.6,  # 노드 라벨 크기
vertex.label.color = "black",
edge.arrow.size = E(g)$arrow.size,  # 방향성 엣지에 화살표 추가
edge.arrow.mode = E(g)$arrow.mode,
edge.color = E(g)$color,  # weight 값에 따른 alpha 적용된 색상
layout = node_positions,
asp = 0
)
dev.off()
# -*- coding: utf-8 -*-
rm(list = ls())
suppressPackageStartupMessages({
library(dplyr)
})
edges_data <- read.table("/Users/dahunseo/programming/R/igraph/all_whole_edgeattrSingleDrug_pp10.txt")
colnames(edges_data) <- c("from", "to", "type", "weight")
edges_data <-
edges_data %>%
dplyr::filter(to != "Drug_Fulvestrant") %>%
dplyr::filter(to != "Drug_Tamoxifen") %>%
dplyr::filter(!(grepl("^CNA_", from) & from != "CNA_EIF4EBP1")) %>%
dplyr::filter(!grepl("^CNA_", to))
# 노드 이름에서 카테고리 추출 (CNA, mRNA, RPPA, Drug)
node_categories <- sapply(unique(c(edges_data$from, edges_data$to)), function(node) {
if (grepl("^CNA_", node)) return("CNA")
if (grepl("^mRNA_", node)) return("mRNA")
if (grepl("^RPPA_", node)) return("RPPA")
if (grepl("^Drug_", node)) return("Drug")
})
# 노드의 색상 설정
node_colors <- sapply(node_categories, function(category) {
if (category == "CNA") return(rgb(red=255,green=153,blue=102,maxColorValue=255))
if (category == "mRNA") return(rgb(red=102,green=153,blue=255,maxColorValue=255))
if (category == "RPPA") return(rgb(red=102,green=204,blue=0,maxColorValue=255))
if (category == "Drug") return(rgb(red=204,green=204,blue=204,maxColorValue=255))
})
# 그래프 생성
g <- graph_from_data_frame(edges_data, directed = TRUE)
# 노드 속성 추가 (색상 및 이름 라벨)
V(g)$color <- node_colors[V(g)$name]
V(g)$label <- sub("^(CNA_|mRNA_|RPPA_|Drug_)", "", V(g)$name)
# 엣지 선명도 추가
E(g)$weight <- edges_data$weight^2
# 엣지 타입에 따라 선 스타일 설정
E(g)$lty <- 1
# 방향이 있는 엣지에 화살표 크기 설정
E(g)$arrow.size <- ifelse(edges_data$type == "dir", 0.9, 1.8)
# 화살표 모드 설정 (단방향 또는 양방향)
E(g)$arrow.mode <- ifelse(edges_data$type == "dir", 2, 0)  # dir 엣지는 화살표 있음, und는 없음
# 엣지 색상에 weight 기반으로 alpha 값 반영 (0에서 1까지, 0은 완전히 투명)
# 투명도 값을 weight에 따라 설정. weight 값이 작을수록 투명하게 설정
E(g)$color <- apply(as.matrix(E(g)$weight), 1, function(w) {
rgb(0.5, 0.5, 0.5, alpha = w / max(E(g)$weight))  # gray 색에 alpha 반영
})
set.seed(123)  # 재현성을 위해 난수 고정
# 노드 카테고리별로 그룹화하고 좌표 수동 지정
node_positions <- matrix(NA, nrow = length(V(g)), ncol = 2)
# 큰 원의 중심 좌표 및 반경 설정 (카테고리별)
R <- 2  # 각 색상 그룹별 큰 원의 반경
x_centers <- c(CNA = -1200, mRNA = -100, RPPA = 800, Drug = 1300)  # 색상 그룹별 X축 중심
y_center <- 0  # 모든 그룹은 Y축 중심을 공유
# 각 카테고리별로 노드를 원형으로 배치
for (category in names(x_centers)) {
group_nodes <- which(node_categories == category)  # 해당 카테고리의 노드들
num_nodes <- length(group_nodes)
theta_step <- 2 * pi / num_nodes  # 각도 간격
for (i in seq_along(group_nodes)) {
r <- sqrt(runif(1, 15000, 15000.5)) * R  # 각 색상 그룹의 큰 원 안에 무작위 배치 (더 넓은 반경 사용)
theta <- theta_step * i  # 각도를 일정하게 설정
# 폴라 좌표에서 X, Y 좌표로 변환 (각 그룹별 중심에서)
node_positions[group_nodes[i], 1] <- x_centers[category] + r * cos(theta)
node_positions[group_nodes[i], 2] <- y_center + r * sin(theta)
}
}
node_positions[10,2] <- node_positions[10,2] - 30
node_positions[11,2] <- node_positions[11,2] + 30
node_positions[3,2] <- node_positions[3,2] + 30
node_positions[7,1] <- node_positions[7,1] + 180
pdf("/Users/dahunseo/programming/R/igraph/graph_output_Palbociclib_TSC/mTOR_CNA_EIF4EBP1_mRNA_CTNNB1.pdf", width = 20, height = 11)
# -*- coding: utf-8 -*-
rm(list = ls())
suppressPackageStartupMessages({
library(dplyr)
})
edges_data <- read.table("/Users/dahunseo/programming/R/igraph/all_whole_edgeattrSingleDrug_pp10.txt")
colnames(edges_data) <- c("from", "to", "type", "weight")
edges_data <-
edges_data %>%
dplyr::filter(to != "Drug_Fulvestrant") %>%
dplyr::filter(to != "Drug_Tamoxifen") %>%
dplyr::filter(!(grepl("^CNA_", from) & from != "CNA_EIF4EBP1")) %>%
dplyr::filter(!grepl("^CNA_", to))
# 노드 이름에서 카테고리 추출 (CNA, mRNA, RPPA, Drug)
node_categories <- sapply(unique(c(edges_data$from, edges_data$to)), function(node) {
if (grepl("^CNA_", node)) return("CNA")
if (grepl("^mRNA_", node)) return("mRNA")
if (grepl("^RPPA_", node)) return("RPPA")
if (grepl("^Drug_", node)) return("Drug")
})
# 노드의 색상 설정
node_colors <- sapply(node_categories, function(category) {
if (category == "CNA") return(rgb(red=255,green=153,blue=102,maxColorValue=255))
if (category == "mRNA") return(rgb(red=102,green=153,blue=255,maxColorValue=255))
if (category == "RPPA") return(rgb(red=102,green=204,blue=0,maxColorValue=255))
if (category == "Drug") return(rgb(red=204,green=204,blue=204,maxColorValue=255))
})
# 그래프 생성
g <- graph_from_data_frame(edges_data, directed = TRUE)
# 노드 속성 추가 (색상 및 이름 라벨)
V(g)$color <- node_colors[V(g)$name]
V(g)$label <- sub("^(CNA_|mRNA_|RPPA_|Drug_)", "", V(g)$name)
# 엣지 선명도 추가
E(g)$weight <- edges_data$weight^2
# 엣지 타입에 따라 선 스타일 설정
E(g)$lty <- 1
# 방향이 있는 엣지에 화살표 크기 설정
E(g)$arrow.size <- ifelse(edges_data$type == "dir", 0.9, 1.8)
# 화살표 모드 설정 (단방향 또는 양방향)
E(g)$arrow.mode <- ifelse(edges_data$type == "dir", 2, 0)  # dir 엣지는 화살표 있음, und는 없음
# 엣지 색상에 weight 기반으로 alpha 값 반영 (0에서 1까지, 0은 완전히 투명)
# 투명도 값을 weight에 따라 설정. weight 값이 작을수록 투명하게 설정
E(g)$color <- apply(as.matrix(E(g)$weight), 1, function(w) {
rgb(0.5, 0.5, 0.5, alpha = w / max(E(g)$weight))  # gray 색에 alpha 반영
})
set.seed(123)  # 재현성을 위해 난수 고정
# 노드 카테고리별로 그룹화하고 좌표 수동 지정
node_positions <- matrix(NA, nrow = length(V(g)), ncol = 2)
# 큰 원의 중심 좌표 및 반경 설정 (카테고리별)
R <- 2  # 각 색상 그룹별 큰 원의 반경
x_centers <- c(CNA = -1200, mRNA = -100, RPPA = 800, Drug = 1300)  # 색상 그룹별 X축 중심
y_center <- 0  # 모든 그룹은 Y축 중심을 공유
# 각 카테고리별로 노드를 원형으로 배치
for (category in names(x_centers)) {
group_nodes <- which(node_categories == category)  # 해당 카테고리의 노드들
num_nodes <- length(group_nodes)
theta_step <- 2 * pi / num_nodes  # 각도 간격
for (i in seq_along(group_nodes)) {
r <- sqrt(runif(1, 15000, 15000.5)) * R  # 각 색상 그룹의 큰 원 안에 무작위 배치 (더 넓은 반경 사용)
theta <- theta_step * i  # 각도를 일정하게 설정
# 폴라 좌표에서 X, Y 좌표로 변환 (각 그룹별 중심에서)
node_positions[group_nodes[i], 1] <- x_centers[category] + r * cos(theta)
node_positions[group_nodes[i], 2] <- y_center + r * sin(theta)
}
}
node_positions[10,2] <- node_positions[10,2] - 30
node_positions[11,2] <- node_positions[11,2] + 30
node_positions[3,2] <- node_positions[3,2] + 30
node_positions[7,1] <- node_positions[7,1] + 180
pdf("/Users/dahunseo/programming/R/igraph/graph_output_Palbociclib_TSCmTOR_CNA_EIF4EBP1_mRNA_CTNNB1.pdf", width = 20, height = 11)
igraph::plot.igraph(g,
edge.width = 3,  # 엣지의 기본 두께
# vertex.shape = "ellipse",
vertex.size = 15,
vertex.label.cex = 1.6,  # 노드 라벨 크기
vertex.label.color = "black",
edge.arrow.size = E(g)$arrow.size,  # 방향성 엣지에 화살표 추가
edge.arrow.mode = E(g)$arrow.mode,
edge.color = E(g)$color,  # weight 값에 따른 alpha 적용된 색상
layout = node_positions,
asp = 0
)
dev.off()
